defmodule Game.Player do
  @moduledoc """
  """

  # ======================================================================================
  # Configuration
  # ======================================================================================

  alias __MODULE__

  # ======================================================================================
  # Attributes
  # ======================================================================================

  @enforce_keys [:best, :games, :id, :name]

  # ======================================================================================
  # Schema
  # ======================================================================================

  defstruct [:best, :games, :id, :name]

  # ======================================================================================
  # Public Functions
  # ======================================================================================

  @doc """
  """
  def new(name \\ "Anonymous")

  def new(name) when is_bitstring(name) do
    %Player{
      best: %Game{
        finished: nil,
        grid: nil,
        id: :"123",
        player: nil,
        score: 2048,
        started: nil,
        state: nil
      },
      games: [],
      id: random_id(),
      name: name
    }
  end

  def new(_name) do
    {:error, :invalid_player}
  end

  # ======================================================================================
  # Private Functions
  # ======================================================================================

  def random_id() do
    make_ref()
    |> inspect()
    |> String.replace(["#", ".", "<", ">", "Reference"], "")
    |> String.to_atom()
  end
end
