name: Build

on:
  push:
    branches: [master]
  pull_request:
    branches: [master]

jobs:
  verify:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        otp: ["23.0.3"]
        elixir: ["1.10.4"]
        node: ["14.6.0"]

    steps:
      - uses: actions/checkout@v2.3.1

      # ==================================================================================
      # Setup
      # ==================================================================================

      - name: Setup elixir
        uses: actions/setup-elixir@v1.3.0
        with:
          otp-version: ${{ matrix.otp }}
          elixir-version: ${{ matrix.elixir }}

      - name: Setup node
        uses: actions/setup-node@v2.1.1
        with:
          node-version: ${{ matrix.node }}

      - name: Setup dependencies
        run: mix setup

      # ==================================================================================
      # Cache
      # ==================================================================================

      - name: Cache mix dependencies
        uses: actions/cache@v2.1.0
        with:
          path: deps
          key: ${{ runner.os }}-mix-${{ hashFiles(format('{0}{1}', github.workspace, '/mix.lock')) }}
          restore-keys: |
            ${{ runner.os }}-mix-

      - name: Cache mix build
        uses: actions/cache@v2.1.0
        with:
          path: _build
          key: ${{ runner.os }}-build-${{ matrix.otp }}-$${{ matrix.elixir }}-${{ hashFiles(format('{0}{1}', github.workspace, '/mix.lock')) }}
          restore-keys: |
            ${{ runner.os }}-mix-

      - name: Get yarn cache directory
        id: yarn-cache
        run: echo "::set-output name=dir::$(yarn cache dir)"

      - name: Cache yarn dependencies
        uses: actions/cache@v2.1.0
        with:
          path: ${{ steps.yarn-cache.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      # ==================================================================================
      # Format
      # ==================================================================================

      - name: Check formatting
        run: mix format --check-formatted

      # ==================================================================================
      # Analysis
      # ==================================================================================

      # - name: Run credo
      #   run: mix credo --strict

      - name: Run sobelow
        run: mix sobelow --verbose

      # ==================================================================================
      # Test
      # ==================================================================================

      - name: Run tests
        run: mix test

  deploy:
    needs: verify
    if: github.ref == 'refs/heads/master'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2.3.1
        with:
          ref: master
          fetch-depth: 0

      # ==================================================================================
      # Gigalixir
      # ==================================================================================

      - name: Run deploy
        uses: mhanberg/gigalixir-action@v0.3.0
        with:
          GIGALIXIR_APP: ${{ secrets.GIGALIXIR_APPNAME }}
          GIGALIXIR_USERNAME: ${{ secrets.GIGALIXIR_USERNAME }}
          GIGALIXIR_PASSWORD: ${{ secrets.GIGALIXIR_PASSWORD }}
          SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
