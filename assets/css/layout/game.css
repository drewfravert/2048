/*
==========================================================================================
  Game
==========================================================================================
*/

.game {
  display: grid;
  grid-template-columns: var(--grid-width);
  gap: calc(var(--spacing) * 2);
  justify-content: center;
  align-items: start;

  @media (min-width: 720px) and (min-aspect-ratio: 9/8) { grid-template-columns: var(--grid-width) 1fr var(--grid-width); }

  &.current {
    grid-template-areas:
      "navigation  "
      "header      "
      "message     "
      "grid        "
      "instructions";
    grid-template-rows: repeat(4, auto) 1fr;

    @media (min-width: 720px) and (min-aspect-ratio: 9/8) {
      grid-template-areas:
        "navigation   . grid"
        "header       . grid"
        "message      . grid"
        "instructions . grid";
      grid-template-rows: auto 1fr repeat(2, auto);
    }

    .header {
      display: grid;
      grid-template-areas:
        "logo . score best       "
        "logo . score best       "
        "logo . new   leaderboard";
      grid-template-columns: auto 1fr repeat(2, auto);
      gap: var(--spacing);
      align-items: start;

      .logo { grid-area: logo; }

      .current { grid-area: score; }

      .best { grid-area: best; }

      .new { grid-area: new; }

      .leaderboard { grid-area: leaderboard; }
    }

    .message { grid-area: message; }

    .instructions { grid-area: instructions; }
  }

  &.overview {
    grid-template-areas:
      "navigation"
      "header    "
      "grid      "
      "data      ";
    grid-template-rows: repeat(3, auto) 1fr;

    @media (min-width: 720px) and (min-aspect-ratio: 9/8) {
      grid-template-areas:
        "navigation . grid"
        "header     . grid"
        "data       . grid";
      grid-template-rows: repeat(2, auto) 1fr;
    }

    .data { grid-area: data; }
  }

  .header { grid-area: header; }

  .grid { grid-area: grid; }

  .navigation { grid-area: navigation; }
}
